{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adibu\\\\Desktop\\\\nextjs-course\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetUpDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetUpDetail, {\n    image: \"https://cdn.getyourguide.com/img/location/54b552aeb52e6.jpeg/88.jpg\",\n    title: \"First meetup\",\n    address: \"Acapluco\",\n    description: \"Test meet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://admin:e7aCzTwsJUCRmR4n@cluster0.gdw9n.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://admin:e7aCzTwsJUCRmR4n@cluster0.gdw9n.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetup: selectedMeetup\n    }\n  };\n};\nexport default MeetUpDetails;","map":{"version":3,"sources":["C:/Users/adibu/Desktop/nextjs-course/pages/[meetupId]/index.js"],"names":["MongoClient","MeetUpDetail","MeetUpDetails","props","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","m","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","meetup"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,qEADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,CAAD,KAAQ;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,CAAC,CAACN,GAAF,CAAMS,QAAN;AAAZ;AAAV,KAAR,CAAZ;AAFF,GAAP;AAID,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEQ;AAAP,GAA1B,CAA7B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLuB,MAAAA,MAAM,EAAEF;AADH;AADF,GAAP;AAKD,CAnBM;AAqBP,eAAetB,aAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\n\r\nimport MeetUpDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetUpDetails = (props) => {\r\n  return (\r\n    <MeetUpDetail\r\n      image=\"https://cdn.getyourguide.com/img/location/54b552aeb52e6.jpeg/88.jpg\"\r\n      title=\"First meetup\"\r\n      address=\"Acapluco\"\r\n      description=\"Test meet\"\r\n    />\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:e7aCzTwsJUCRmR4n@cluster0.gdw9n.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((m) => ({ params: { meetupId: m._id.toString() } })),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://admin:e7aCzTwsJUCRmR4n@cluster0.gdw9n.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetup: selectedMeetup,\r\n    },\r\n  };\r\n};\r\n\r\nexport default MeetUpDetails;\r\n"]},"metadata":{},"sourceType":"module"}